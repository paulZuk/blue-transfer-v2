'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

$(function () {
    //Hide loading screen
    $(window).on('load', function () {
        $('.loading').find('div').fadeOut(1200, function () {
            $(window).scrollTop(0);
            $('.loading').fadeOut(600, function () {
                $('body').removeClass('loadingScreen');
            });
        });
    });

    // Smooth scrolling using jQuery easing
    $('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () {
        if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
            var target = $(this.hash);
            target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
            if (target.length) {
                $('html, body').animate({
                    scrollTop: target.offset().top - 48
                }, 1000, 'easeInOutExpo');
                return false;
            }
        }
    });
    // Move background function

    var header = $('header');
    var headerHeight = header.outerHeight();

    function moveBackground(elem, factor, from, to) {
        var scrollTop = $(window).scrollTop();
        var calc = void 0;

        if (scrollTop >= to) {
            calc = (to - from) / factor;
        }

        if (scrollTop >= from) {
            calc = (scrollTop - from) / factor;
        }

        elem.css({ 'background-position': 'center ' + calc + 'px' });
    }

    $(window).on('scroll', function () {
        moveBackground(header, 3, 0, headerHeight);
    });

    // Closes responsive menu when a scroll trigger link is clicked
    $('.js-scroll-trigger').click(function () {
        $('.navbar-collapse').collapse('hide');
    });

    // Activate scrollspy to add active class to navbar items on scroll
    $('body').scrollspy({
        target: '#mainNav',
        offset: 54
    });

    // Collapse Navbar
    var navbarCollapse = function navbarCollapse() {
        if ($('#mainNav').offset().top > 100) {
            $('#mainNav').addClass('navbar-shrink');
        } else {
            $('#mainNav').removeClass('navbar-shrink');
        }
    };
    // Collapse now if page is not at top
    navbarCollapse();
    // Collapse the navbar when page is scrolled
    $(window).scroll(navbarCollapse);

    // Media player

    // MEDIA PLAYER

    var MediaPlayer = function () {
        function MediaPlayer(container) {
            _classCallCheck(this, MediaPlayer);

            this.container = document.getElementById(container);
            this.player = this.container.querySelector('.player');
            this.duration = this.player.duration || null;
            this.playButton = this.container.querySelector('.play');
            this.playHead = this.container.querySelector('.playhead');
            this.timeline = this.container.querySelector('.timeline');
            this.timelineWidth = this.timeline.offsetWidth - this.playHead.offsetWidth;
            this.onplayhead = false;
            this.nextButton = this.container.querySelector('.next');
            this.prevButton = this.container.querySelector('.prev');
            this.playlist = this.container.querySelector('.playlist');
            this.listItems = this.playlist.querySelectorAll('li');
            this.playingTitle = document.querySelector('.now-playing__title').querySelector('p');
            this.source = document.getElementById('source');

            this.setEventListeners = this.setEventListeners.bind(this);
            this.play = this.play.bind(this);
            this.updateTime = this.updateTime.bind(this);
            this.getAudioDuration = this.getAudioDuration.bind(this);
            this.movePlayhead = this.movePlayhead.bind(this);
            this.clickPercent = this.clickPercent.bind(this);
            this.clickTimeline = this.clickTimeline.bind(this);
            this.mouseDown = this.mouseDown.bind(this);
            this.mouseUp = this.mouseUp.bind(this);
            this.playNext = this.playNext.bind(this);
            this.playPrev = this.playPrev.bind(this);
            this.selectFromList = this.selectFromList.bind(this);

            this.setEventListeners();
        }

        _createClass(MediaPlayer, [{
            key: 'setEventListeners',
            value: function setEventListeners() {
                this.playButton.addEventListener('click', this.play);
                this.player.addEventListener('timeupdate', this.updateTime, false);
                this.player.addEventListener('canplaythrough', this.getAudioDuration, false);
                this.timeline.addEventListener('click', this.clickTimeline, false);
                this.playHead.addEventListener('mousedown', this.mouseDown, false);
                this.nextButton.addEventListener('click', this.playNext, false);
                this.prevButton.addEventListener('click', this.playPrev, false);
                this.playlist.addEventListener('click', this.selectFromList, false);

                window.addEventListener('mouseup', this.mouseUp, false);
            }
        }, {
            key: 'play',
            value: function play() {
                if (this.player.paused) {
                    this.player.play();
                    this.playButton.className = '';
                    this.playButton.className = 'pause';
                } else {
                    this.player.pause();
                    this.playButton.className = '';
                    this.playButton.className = 'play';
                }
            }
        }, {
            key: 'updateTime',
            value: function updateTime() {
                var playPercent = this.timelineWidth * (this.player.currentTime / this.duration);
                this.playHead.style.marginLeft = playPercent + 'px';
                if (this.player.currentTime === this.duration) {
                    this.playButton.className = '';
                    this.playButton.className = 'play';
                }
            }
        }, {
            key: 'getAudioDuration',
            value: function getAudioDuration() {
                this.duration = this.player.duration;
            }
        }, {
            key: 'movePlayhead',
            value: function movePlayhead(e) {
                var newMargLeft = e.clientX - MediaPlayer.getPosition(this.timeline);

                if (newMargLeft >= 0 && newMargLeft <= this.timelineWidth) {
                    this.playHead.style.marginLeft = newMargLeft + 'px';
                }
                if (newMargLeft < 0) {
                    this.playHead.style.marginLeft = '0px';
                }
                if (newMargLeft > this.timelineWidth) {
                    this.playHead.style.marginLeft = this.timelineWidth + 'px';
                }
            }
        }, {
            key: 'clickPercent',
            value: function clickPercent(e) {
                return (e.clientX - MediaPlayer.getPosition(this.timeline)) / this.timelineWidth;
            }
        }, {
            key: 'clickTimeline',
            value: function clickTimeline(e) {
                this.movePlayhead(e);
                this.player.currentTime = this.duration * this.clickPercent(e);
            }
        }, {
            key: 'mouseDown',
            value: function mouseDown() {
                this.onplayhead = true;
                window.addEventListener('mousemove', this.movePlayhead, true);
                this.player.removeEventListener('timeupdate', this.updateTime, false);
            }
        }, {
            key: 'mouseUp',
            value: function mouseUp(e) {
                if (this.onplayhead === true) {
                    this.movePlayhead(e);
                    window.removeEventListener('mousemove', this.movePlayhead, true);
                    this.player.currentTime = this.duration * this.clickPercent(e);
                    this.player.addEventListener('timeupdate', this.updateTime, false);
                }
                this.onplayhead = false;
            }
        }, {
            key: 'playNext',
            value: function playNext() {
                for (var i = 0; i < this.listItems.length; i++) {
                    if (this.listItems[i].classList.contains('active') && typeof this.listItems[i + 1] !== 'undefined') {
                        MediaPlayer.clearActive(this.listItems);
                        this.loadAndPlay(Number(this.listItems[i].id) + 1);
                        return;
                    }
                }
            }
        }, {
            key: 'playPrev',
            value: function playPrev() {
                for (var i = 0; i < this.listItems.length; i++) {
                    if (this.listItems[i].classList.contains('active') && typeof this.listItems[i - 1] !== 'undefined') {
                        MediaPlayer.clearActive(this.listItems);
                        this.loadAndPlay(Number(this.listItems[i - 1].id));
                        return;
                    }
                }
            }
        }, {
            key: 'selectFromList',
            value: function selectFromList(e) {
                MediaPlayer.clearActive(this.listItems);
                this.loadAndPlay(e.target.parentElement.id);
            }
        }, {
            key: 'loadAndPlay',
            value: function loadAndPlay(trackId) {
                var track = document.getElementById(trackId);
                var trackName = track.querySelector('.title');

                this.source.setAttribute('src', 'music/' + track.dataset.filename);
                track.classList.add('active');

                this.playingTitle.innerText = trackName.innerText;

                this.playButton.className = '';
                this.playButton.className = 'pause';
                this.player.load();
                this.player.play();
            }
        }], [{
            key: 'getPosition',
            value: function getPosition(element) {
                return element.getBoundingClientRect().left;
            }
        }, {
            key: 'clearActive',
            value: function clearActive(items) {
                items.forEach(function (item) {
                    item.classList.remove('active');
                });
            }
        }]);

        return MediaPlayer;
    }();

    var media = new MediaPlayer('media-player');

    // Close edit
    var prepareData = function prepareData() {
        var data = {};
        var elements = $('[data-title]').toArray();
        elements.forEach(function (elem) {
            data[elem.getAttribute('data-title')] = elem.innerHTML;
        });
        return data;
    };
    var postData = function postData() {
        var data = prepareData();
        $.ajax({
            url: 'cms.php',
            data: data,
            type: 'post'
        });
    };
    var updateHtml = function updateHtml(data) {
        var elements = $('[data-title]').toArray();
        elements.forEach(function (elem) {
            var name = elem.getAttribute('data-title');
            // eslint-disable-next-line no-param-reassign
            elem.innerHTML = data[name];
        });
    };
    var getData = function getData() {
        $.get('cms.json', function (data) {
            updateHtml(data);
        });
    };
    var setEditable = function setEditable() {
        var password = prompt('Hasło');
        if (password === 'test') {
            $('[data-title]').attr('contenteditable', true);
            $('.cms-bar').addClass('visible');
            $('#logo').off('dblclick');
            return;
        }
        alert('Podano złe hasło!!!');
    };
    $(function () {
        getData();
    });
    var closeEdit = function closeEdit() {
        $('[data-title]').removeAttr('contenteditable');
        $('.cms-bar').removeClass('visible');
        $('#logo').on('dblclick', function () {
            setEditable();
        });
    };

    $('#closeEdit').on('click', function () {
        closeEdit();
        postData();
    });

    $('#logo').on('dblclick', function () {
        setEditable();
    });
});